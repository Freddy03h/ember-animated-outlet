Ember.AnimatedContainerView=Ember.ContainerView.extend({classNames:["layer layout-animation"],init:function(){this._super(),Ember.AnimatedContainerView._views[this.get("name")]=this,this._isAnimating=!1},willDestroy:function(){this._super();var a=this.get("name");delete Ember.AnimatedContainerView._views[a],delete Ember.AnimatedContainerView._animationQueue[a]},_currentViewWillChange:Ember.beforeObserver(function(){var a=Ember.get(this,"currentView");a&&this.set("oldView",a)},"currentView"),_currentViewDidChange:Ember.observer(function(){var a=Ember.get(this,"currentView"),b=Ember.get(this,"oldView"),c=this.get("name"),d=null;a&&(b&&(Ember.assert("Ember.AnimatedContainerView can only animate non-virtual views. You need to explicitly define your view class.",!b.isVirtual),Ember.assert("Ember.AnimatedContainerView can only animate non-virtual views. You need to explicitly define your view class.",!a.isVirtual),d=Ember.AnimatedContainerView._animationQueue[c],delete Ember.AnimatedContainerView._animationQueue[c],d&&!Ember.AnimatedContainerView._effects[d]&&(Ember.warn("Unknown animation effect: "+d),d=null),this.set("oldView",null)),this._queuedAnimation&&(b.destroy(),b=this._queuedAnimation.oldView),this._queuedAnimation={newView:a,oldView:b,effect:d},this._handleAnimationQueue())},"currentView"),_handleAnimationQueue:function(){if(!this._isAnimating){var a=this,b=this._queuedAnimation;if(b){var c=b.newView,d=b.oldView,e=b.effect;this._queuedAnimation=null,this.pushObject(c),d&&e?(this._isAnimating=!0,c.one("didInsertElement",function(){Ember.AnimatedContainerView._effects[e](a,c,d,function(){Em.run(function(){a.removeObject(d),d.destroy(),a._isAnimating=!1,a._handleAnimationQueue()})})})):(c.on("didInsertElement",function(){c.$().addClass("current")}),d&&(this.removeObject(d),d.destroy()))}}},enqueueAnimation:function(a){Ember.AnimatedContainerView._animationQueue[this.get("name")]=a},setCurrentViewAnimated:function(a,b){this.enqueueAnimation(b),this.set("currentView",a)}}),Ember.AnimatedContainerView.reopenClass({_views:{},_animationQueue:{},enqueueAnimations:function(a){for(var b in a)a.hasOwnProperty(b)&&(this._animationQueue[b]=a[b])},_effects:{},registerEffect:function(a,b){this._effects[a]=b}}),Handlebars.registerHelper("animated-outlet",function(a,b){var c;for(a&&a.data&&a.data.isRenderData&&(b=a,a="main"),c=b.data.view;!c.get("template.isTop");)c=c.get("_parentView");return b.data.view.set("outletSource",c),b.hash.currentViewBinding="_view.outletSource._outlets."+a,Ember.Handlebars.helpers.view.call(this,Ember.AnimatedContainerView,b)}),Handlebars.registerHelper("animatedOutlet",function(){return Ember.warn("The 'animatedOutlet' view helper is deprecated in favor of 'animated-outlet'"),Ember.Handlebars.helpers["animated-outlet"].apply(this,arguments)});var get=Ember.get,set=Ember.set;Ember.onLoad("Ember.Handlebars",function(){function a(a){var b=get(a,"routeArgs").slice(),c=a.parameters.animations;return b.splice(1,0,c),b}var b=(Ember.Router.resolveParams,Ember.ViewUtils.isSimpleClick),c=Ember.AnimatedLinkView=Ember.LinkView.extend({_invoke:function(c){if(!b(c))return!0;if(c.preventDefault(),this.bubbles===!1&&c.stopPropagation(),get(this,"_isDisabled"))return!1;if(get(this,"loading"))return Ember.Logger.warn("This link-to is in an inactive loading state because at least one of its parameters presently has a null/undefined value, or the provided route name is invalid."),!1;var d=this.get("router"),e=a(this,d);get(this,"replace")?d.replaceWithAnimated.apply(d,e):d.transitionToAnimated.apply(d,e)}});c.toString=function(){return"AnimatedLinkView"},Ember.Handlebars.registerHelper("link-to-animated",function(a){var b=[].slice.call(arguments,-1)[0],d=[].slice.call(arguments,0,-1),e=b.hash;Ember.assert("link-to-animated must contain animations","string"==typeof e.animations);for(var f=/\s*([a-z]+)\s*:\s*([a-z]+)/gi,g={};match=f.exec(e.animations);)g[match[1]]=match[2];return delete e.animations,e.namedRoute=a,e.currentWhen=e.currentWhen||a,e.disabledBinding=e.disabledWhen,e.parameters={context:this,options:b,animations:g,params:d},Ember.Handlebars.helpers.view.call(this,c,b)}),Ember.Handlebars.registerHelper("linkToAnimated",function(){return Ember.warn("The 'linkToAnimated' view helper is deprecated in favor of 'link-to-animated'"),Ember.Handlebars.helpers["link-to-animated"].apply(this,arguments)})}),Ember.Router.reopen({transitionToAnimated:function(a,b){return Ember.AnimatedContainerView.enqueueAnimations(b),Array.prototype.splice.call(arguments,1,1),this.transitionTo.apply(this,arguments)},replaceWithAnimated:function(a,b){return Ember.AnimatedContainerView.enqueueAnimations(b),Array.prototype.splice.call(arguments,1,1),this.replaceWith.apply(this,arguments)}}),Ember.Route.reopen({transitionToAnimated:function(){var a=this.router;return a.transitionToAnimated.apply(a,arguments)},replaceWithAnimated:function(){var a=this.router;return a.replaceWithAnimated.apply(a,arguments)}}),Ember.ControllerMixin.reopen({transitionToRouteAnimated:function(a,b){return Ember.AnimatedContainerView.enqueueAnimations(b),Array.prototype.splice.call(arguments,1,1),this.transitionToRoute.apply(this,arguments)},replaceRouteAnimated:function(a,b){return Ember.AnimatedContainerView.enqueueAnimations(b),Array.prototype.splice.call(arguments,1,1),this.replaceRoute.apply(this,arguments)}}),function(){var a=function(a,b,c,d,e){function f(){h.unbind("webkitAnimationEnd animationend",f),h.removeClass(e+" out current"),g.removeClass(e+" in"),d()}var g=b.$(),h=c.$();h.bind("webkitAnimationEnd animationend",f),window.scrollTo(0,0),h.addClass(e+" out"),g.addClass(e+" in current")};Ember.AnimatedContainerView.registerEffect("dissolve",function(b,c,d,e){a(b,c,d,e,"dissolve")}),Ember.AnimatedContainerView.registerEffect("slideRight",function(b,c,d,e){a(b,c,d,e,"slideright")}),Ember.AnimatedContainerView.registerEffect("slideLeft",function(b,c,d,e){a(b,c,d,e,"slideleft")})}();